@charset "utf-8";


@function tint($color, $percent) {
  @return mix(white, $color, $percent);
}

@function shade($color, $percent) {
  @return mix(black, $color, $percent);
}

@function background-color($color) {
  @return tint($color, 83%);
}

@function border-color($color, $light: true) {
  @if $light {
    @return $color;
  } @else {
    @return rgba(black, 0.3);
  }
}

@function hover-color($color, $box: true, $light: true) {
  @if $box {
    @if $light {
      @return tint($color, 10%);
    } @else {
      @return darken($color, 5%);
    }
  } @else {
    @if $light {
      @return tint($color, 30%);
    } @else {
      @return darken($color, 15%);
    }
  }
}

@function gradient-color($color) {
  @return darken($color, 10%);
}

@function focus-box-shadow-color($color) {
  @return rgba($color, 0.3)
}


$colors: (
  primary: hsl(30, 40%, 50%),
  secondary: hsl(310, 40%, 50%),
  error: hsl(0, 45%, 50%),
  information: hsl(200, 60%, 45%)
);

$background-color: background-color(map-get($colors, primary));
$strong-background-color: darken($background-color, 10%);
$header-background-color: darken(map-get($colors, primary), 10%);

$head-color: map-get($colors, primary);
$light-color: map-get($colors, primary);
$light-border-color: border-color(map-get($colors, primary));
$dark-border-color: border-color(map-get($colors, primary), false);
$pale-border-color: rgba($light-border-color, 0.3);

$logo-color: darken(map-get($colors, primary), 20%);
$footer-color: map-get($colors, primary);

$link-color: map-get($colors, secondary);
$link-hover-color: hover-color($link-color, false);

$pale-link-color: $background-color;
$pale-link-hover-color: hover-color($pale-link-color, false, false);

$focus-box-shadow-setting: 0px 0px 0px 2px;
$inset-box-shadow-setting: 0px 2px 3px;
$small-border-radius: 3px;
$large-border-radius: 6px;

$icon-width: 1.2em;
$blank-margin: 0.3em;
$control-margin: 15px;

$page-width: 800px;
$page-horizontal-margin: 30px;

$font-size: 16px;

$text-line-height: 1.6;
$tooltip-line-height: 1.4;

$europian-font-family: "EB Garamond", "Times New Roman";
$japanese-font-family: "Yu Mincho", "YuMincho", "ヒラギノ明朝 ProN W3", "Hiragino Mincho ProN", "ＭＳ Ｐ明朝";
$monospace-font-family: "Inconsolata", "Courier New", "Courier", "Yu Gothic", "YuGothic", "ＭＳ ゴシック";
$special-font-family: "Simonetta";
$icon-font-family: "Font Awesome 5 Pro", "Font Awesome 5 Free", "FontAwesome";


@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}


@mixin smartphone {
  @media screen and (max-width: $page-width + $page-horizontal-margin * 2) {
    @content;
  }
}

@mixin intermediate {
  @media screen and (max-width: $page-width + 100px) {
    @content;
  }
}

@mixin line-height($line-height: $text-line-height) {
  line-height: $line-height;
  &::before {
    width: 0px;
    height: 0px;
    margin-top: (1 - $line-height) * 0.5em;
    display: block;
    content: "";
  }
  &::after {
    width: 0;
    height: 0;
    margin-bottom: (1 - $line-height) * 0.5em;
    display: block;
    content: "";
  }
}

@mixin reset-first-margin($directions: top left) {
  @each $direction in $directions {
    $property-name: "margin-" + $direction;
    &:first-child {
      #{$property-name}: 0px;
    }
  }
}

@mixin page($margin-top: 130px, $margin-bottom: 80px) {
  width: calc(100% - #{$page-horizontal-margin} * 2);
  margin: $margin-top $page-horizontal-margin $margin-bottom $page-horizontal-margin;
  padding: 0px;
  box-sizing: border-box;
}

@mixin monospace-font {
  font-family: $monospace-font-family, monospace;
  font-size: 95%;
  font-feature-settings: "palt" 0, "pkna" 0;
}

@mixin icon-font {
  font-family: $icon-font-family;
  font-weight: 900;
}

@mixin unordered-list-item($icon, $icon-color, $marker-width) {
  margin-left: $marker-width + $blank-margin;
  text-align: justify;
  &::before {
    @include icon-font;
    width: $marker-width;
    margin-right: $blank-margin;
    margin-left: -$marker-width - $blank-margin;
    color: $icon-color;
    content: $icon;
    display: inline-block;
  }
}

@mixin unordered-list($icon, $icon-color, $marker-width) {
  margin: 0px;
  padding: 0px;
  list-style-type: none;
  >li {
    @include unordered-list-item($icon, $icon-color, $marker-width);
  }
}

@mixin ordered-list-item($number-color) {
  margin-left: 0.9em + $blank-margin;
  text-align: justify;
  position: relative;
  counter-increment: list;
  &::before {
    top: 0.5em;
    width: 0.8em * (100% / 70%);
    height: 0.8em * (100% / 70%);
    margin-right: $blank-margin * (100% / 70%);
    margin-left: (-0.9em - $blank-margin) * (100% / 70%);
    font-size: 70%;
    color: $number-color;
    line-height: 1;
    text-align: center;
    border: 1px $number-color solid;
    border-radius: 50%;
    content: counter(list);
    display: inline-block;
    position: absolute;
  }
}

@mixin ordered-list($number-color) {
  margin: 0px;
  padding: 0px;
  list-style-type: none;
  >li {
    @include ordered-list-item($number-color);
  }
}

@function input-box-shadow-color($color) {
  @return rgba($color, 0.1);
}

@mixin input($color, $dye: false) {
  width: 100%;
  padding: 0.12em 0.5em;
  font-family: inherit;
  font-size: inherit;
  line-height: $text-line-height;
  border: 1px border-color($color) solid;
  border-radius: $small-border-radius;
  background-color: white;
  box-shadow: inset $inset-box-shadow-setting input-box-shadow-color($color);
  box-sizing: border-box;
  outline: none;
  @if $dye {
    background-color: tint($color, 90%);
  }
  &:focus-within {
    box-shadow: inset $inset-box-shadow-setting input-box-shadow-color($color), $focus-box-shadow-setting focus-box-shadow-color($color);
  }
}

@mixin button($color) {
  padding: 0.12em 0.8em;
  font-family: inherit;
  font-size: inherit;
  line-height: $text-line-height;
  color: white;
  border: 1px border-color($color, false) solid;
  border-radius: $small-border-radius;
  background-color: $color;
  background-image: linear-gradient(to bottom, rgba(black, 0), rgba(black, 0.25));
  white-space: nowrap;
  position: relative;
  cursor: pointer;
  outline: none;
  &:hover {
    background-color: hover-color($color);
  }
  &:focus {
    box-shadow: $focus-box-shadow-setting focus-box-shadow-color($color);
  }
  &:active {
    background-color: shade($color, 25%);
    background-image: none;
    box-shadow: inset $inset-box-shadow-setting rgba(black, 0.1);
  }
  &:active:focus {
    box-shadow: inset $inset-box-shadow-setting rgba(black, 0.1), $focus-box-shadow-setting focus-box-shadow-color($color);
  }
  &:disabled {
    opacity: 0.5;
  }
  &:disabled:hover {
    background-color: $color;
    cursor: not-allowed;
  }
}

@mixin white-pane($hover: false) {
  color: inherit;
  border: 1px rgba(white, 0.8) solid;
  border-radius: $large-border-radius;
  background-color: rgba(white, 0.5);
  @if $hover {
    &:hover {
      background-color: rgba(white, 0.7);
    }
  }
}

@mixin color-pane($color, $hover: false) {
  color: $color;
  border: 1px border-color($color) solid;
  border-radius: $large-border-radius;
  background-color: background-color($color);
  @if $hover {
    &:hover {
      background-color: hover-color(background-color($color), true, false);
    }
  }
}

@mixin header-container {
  margin: 0px 50px;
  height: 100%;
  @include intermediate {
    width: $page-width;
    margin: 0px auto;
  }
  @include smartphone {
    width: calc(100% - #{$page-horizontal-margin * 2});
    margin: 0px auto;
  }
}