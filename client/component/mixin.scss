@charset "utf-8";

@import "/client/component/function.scss";


@function background-color($color) {
  @return tint($color, 83%);
}

@function border-color($color, $light: true) {
  @if $light {
    @return $color;
  } @else {
    @return rgba(black, 0.3);
  }
}

@function hover-color($color, $box: true, $light: true) {
  @if $box {
    @if $light {
      @return tint($color, 10%);
    } @else {
      @return darken($color, 5%);
    }
  } @else {
    @if $light {
      @return tint($color, 30%);
    } @else {
      @return darken($color, 15%);
    }
  }
}

@function gradient-color($color) {
  @return darken($color, 10%);
}

@function focus-box-shadow-color($color) {
  @return rgba($color, 0.3)
}


$colors: (
  primary: hsl(30, 40%, 50%),
  secondary: hsl(310, 40%, 50%),
  error: hsl(0, 45%, 50%),
  information: hsl(200, 60%, 45%)
);

$background-color: background-color(map-get($colors, primary));
$strong-background-color: darken($background-color, 10%);
$header-background-color: darken(map-get($colors, primary), 10%);

$text-color: hsl(30, 40%, 22%);

$light-color: map-get($colors, primary);
$light-border-color: border-color(map-get($colors, primary));
$dark-border-color: border-color(map-get($colors, primary), false);
$invert-border-color: rgba($light-border-color, 0.3);

$link-color: map-get($colors, secondary);
$link-hover-color: hover-color($link-color, false);
$pale-link-color: $background-color;
$pale-link-hover-color: hover-color($pale-link-color, false, false);

$logo-color: darken(map-get($colors, primary), 20%);
$head-color: map-get($colors, primary);
$footer-color: map-get($colors, primary);

$root-size: 16px;

$huge-margin: 96u;
$large-margin: 64u;
$medium-margin: 48u;
$small-margin: 32u;
$tiny-margin: 16u;

$control-vertical-margin: 48u;
$control-horizontal-margin: 48u;
$small-control-horizontal-margin: 32u;
$small-control-vertical-margin: 24u;
$paragraph-margin: 32u;

$page-width: 2560u;
$page-top-margin: 180u;
$page-bottom-margin: 240u;
$page-horizontal-margin: 96u;

$header-height: 210u;
$dictionary-header-height: 150u;
$footer-height: 150u;

$box-vertical-padding: 0.125em;
$box-horizontal-padding: 0.5em;
$input-vertical-padding: 0.125em;
$input-horizontal-padding: 0.5em;
$textarea-vertical-padding: 0.25em;
$button-hotizontal-padding: 0.8em;
$tooltip-vertical-padding: 0.25em;
$tooltip-horizontal-padding: 0.5em;

$icon-width: 1.25em;
$blank-margin: 0.3em;

$focus-box-shadow-setting: 0rpx 0rpx 0rpx 2rpx;
$inset-box-shadow-setting: 0rpx 2rpx 3rpx;

$small-border-radius: 3rpx;
$large-border-radius: 5rpx;

$line-height: 24px / $root-size;
$tooltip-line-height: 22px / $root-size;

$european-font-family: "Alegreya Sans", "Arial";
$japanese-font-family: "游ゴシック Medium", "Yu Gothic Medium", "游ゴシック体", "YuGothic", "ヒラギノ角ゴ ProN W3", "Hiragino Kaku Gothic ProN", "ＭＳ Ｐゴシック";
$european-bold-font-family: "Alegreya Sans", "Arial";
$japanese-bold-font-family: "游ゴシック", "Yu Gothic", "游ゴシック体", "YuGothic", "ヒラギノ角ゴ ProN W3", "Hiragino Kaku Gothic ProN", "ＭＳ Ｐゴシック";
$monospace-font-family: "Inconsolata", "游ゴシック Medium", "Yu Gothic Medium", "游ゴシック体", "YuGothic", "ヒラギノ角ゴ ProN W3", "Hiragino Kaku Gothic ProN", "ＭＳ ゴシック";
$special-font-family: "Simonetta";
$icon-font-family: "Font Awesome 5 Pro", "Font Awesome 5 Free", "Font Awesome 5 Brands", "FontAwesome";


@mixin smartphone {
  @media screen and (max-width: #{$page-width + $page-horizontal-margin * 2}) {
    @content;
  }
}

@mixin intermediate {
  @media screen and (max-width: #{$page-width + 300u}) {
    @content;
  }
}

@mixin bold-font {
  font-family: $european-bold-font-family, $japanese-bold-font-family, sans-serif;
  font-weight: bold;
}

@mixin line-height($line-height: $line-height) {
  line-height: $line-height;
  &::before {
    width: 0rpx;
    height: 0rpx;
    margin-top: - line-intrusion($line-height);
    display: block;
    content: "";
  }
  &::after {
    width: 0rpx;
    height: 0rpx;
    margin-bottom: - line-intrusion($line-height);
    display: block;
    content: "";
  }
}

@mixin reset-first-margin($directions: top left) {
  @each $direction in $directions {
    $property-name: "margin-" + $direction;
    &:first-child {
      #{$property-name}: 0rpx;
    }
  }
}

@mixin page($additional-top-margin) {
  width: calc(100% - #{$page-horizontal-margin} * 2);
  margin-top: $page-top-margin + $additional-top-margin;
  margin-bottom: $page-bottom-margin;
  margin-right: $page-horizontal-margin;
  margin-left: $page-horizontal-margin;
  padding: 0rpx;
  box-sizing: border-box;
}

@mixin monospace-font {
  font-family: $monospace-font-family, monospace;
  font-size: 95%;
  font-feature-settings: "palt" 0, "pkna" 0;
}

@mixin icon-font {
  font-family: $icon-font-family;
  font-weight: 900;
}

@mixin unordered-list-item($icon, $icon-color, $marker-width) {
  margin-left: $marker-width + $blank-margin;
  text-align: justify;
  &::before {
    @include icon-font;
    width: $marker-width;
    margin-right: $blank-margin;
    margin-left: -$marker-width - $blank-margin;
    color: $icon-color;
    content: $icon;
    display: inline-block;
  }
}

@mixin unordered-list($icon, $icon-color, $marker-width) {
  margin: 0rpx;
  padding: 0rpx;
  list-style-type: none;
  >li {
    @include unordered-list-item($icon, $icon-color, $marker-width);
  }
}

@mixin ordered-list-item($number-color) {
  margin-left: 0.9em + $blank-margin;
  text-align: justify;
  position: relative;
  counter-increment: list;
  &::before {
    top: 0.5em;
    width: 0.8em * (100% / 70%);
    height: 0.8em * (100% / 70%);
    margin-right: $blank-margin * (100% / 70%);
    margin-left: - (0.9em + $blank-margin) * (100% / 70%);
    font-size: 70%;
    color: $number-color;
    line-height: 1;
    text-align: center;
    border: 1rpx $number-color solid;
    border-radius: 50%;
    content: counter(list);
    display: inline-block;
    position: absolute;
  }
}

@mixin ordered-list($number-color) {
  margin: 0rpx;
  padding: 0rpx;
  list-style-type: none;
  >li {
    @include ordered-list-item($number-color);
  }
}

@function input-box-shadow-color($color) {
  @return rgba($color, 0.1);
}

@mixin input($color, $dye: false) {
  width: 100%;
  padding: $input-vertical-padding $input-horizontal-padding;
  font-family: inherit;
  font-size: inherit;
  color: inherit;
  line-height: $line-height;
  border: 1rpx border-color($color) solid;
  border-radius: $small-border-radius;
  background-color: white;
  box-shadow: inset $inset-box-shadow-setting input-box-shadow-color($color);
  box-sizing: border-box;
  outline: none;
  @if $dye {
    background-color: tint($color, 90%);
  }
  &:focus-within:not(:disabled):not(.disabled) {
    box-shadow: inset $inset-box-shadow-setting input-box-shadow-color($color), $focus-box-shadow-setting focus-box-shadow-color($color);
  }
  &:disabled,
  &.disabled {
    opacity: 0.5;
  }
  &:disabled:hover,
  &:disabled:hover *,
  &.disabled:hover,
  &.disabled:hover * {
    cursor: not-allowed;
  }
}

@mixin button($color) {
  padding: $input-vertical-padding $button-hotizontal-padding;
  font-family: inherit;
  font-size: inherit;
  color: white;
  line-height: $line-height;
  border: 1rpx border-color($color, false) solid;
  border-radius: $small-border-radius;
  background-color: $color;
  background-image: linear-gradient(to bottom, rgba(black, 0), rgba(black, 0.25));
  white-space: nowrap;
  position: relative;
  cursor: pointer;
  outline: none;
  &:hover:not(:disabled) {
    background-color: hover-color($color);
  }
  &:focus:not(:disabled) {
    box-shadow: $focus-box-shadow-setting focus-box-shadow-color($color);
  }
  &:active:not(:disabled) {
    background-color: shade($color, 25%);
    background-image: none;
    box-shadow: inset $inset-box-shadow-setting rgba(black, 0.1);
  }
  &:active:focus:not(:disabled) {
    box-shadow: inset $inset-box-shadow-setting rgba(black, 0.1), $focus-box-shadow-setting focus-box-shadow-color($color);
  }
  &:disabled {
    opacity: 0.5;
  }
  &:disabled:hover {
    cursor: not-allowed;
  }
}

@mixin white-pane($hover: false) {
  color: inherit;
  border: 1rpx rgba(white, 0.8) solid;
  border-radius: $large-border-radius;
  background-color: rgba(white, 0.5);
  @if $hover {
    &:hover {
      background-color: rgba(white, 0.7);
    }
  }
}

@mixin color-pane($color, $hover: false) {
  color: $color;
  border: 1rpx border-color($color) solid;
  border-radius: $large-border-radius;
  background-color: background-color($color);
  @if $hover {
    &:hover {
      background-color: hover-color(background-color($color), true, false);
    }
  }
}

@mixin header-container {
  margin: 0rpx 150u;
  height: 100%;
  @include intermediate {
    width: $page-width;
    margin: 0rpx auto;
  }
  @include smartphone {
    width: calc(100% - #{$page-horizontal-margin * 2});
    margin: 0rpx auto;
  }
}