@charset "utf-8";

@import "/client/component/mixin.scss";


.root {
  display: flex;
  flex-direction: column;
  flex-grow: 1;
}

.textarea {
  @include input(map-get($colors, primary));
  padding: 0.25em 0.5em;
  display: block;
  resize: none;
  flex-grow: 1;
}

.textarea.monospace {
  font-family: $monospace-font-family, monospace;
  font-size: 95%;
  font-feature-settings: "palt" 0, "pkna" 0;
}

.textarea.nowrap {
  white-space: pre;
  overflow: auto;
}

.textarea-code {
  @include input(map-get($colors, primary));
  padding: 0px;
  display: block;
  resize: none;
  flex-grow: 1;
  position: relative;
}

.textarea-code >div {
  padding: 0em;
  font-family: $monospace-font-family, monospace;
  font-size: 95%;
  font-feature-settings: "palt" 0, "pkna" 0;
  background: transparent;
  box-sizing: border-box;
}

.textarea-code.no-fit >div {
  height: 100%;
  top: 0px;
  bottom: 0px;
  left: 0px;
  right: 0px;
  position: absolute;
}

.textarea-code.fit >div {
  height: auto;
  left: 0px;
  right: 0px;
  position: relative;
}

.textarea-code *[class~="CodeMirror-selected"] {
  background: background-color(map-get($colors, information)) !important;
}

.textarea-code *[class|="cm"] {
  font-weight: normal !important;
  font-style: normal !important;
  text-decoration: none !important;
}

.textarea-code >div *[class~="CodeMirror-lines"] {
  padding: 0.25em 0em !important;
} 

.textarea-code >div *[class~="CodeMirror-line"] {
  padding: 0em 0.5em !important;
}

.textarea-code :global(.cm-s-zpmarkdown .cm-link) {
  color: hsl(180, 70%, 40%);
}

.textarea-code :global(.cm-s-zpmarkdown .cm-url) {
  color: hsl(0, 70%, 40%);
}

.textarea-code :global(.cm-s-zpmarkdown .cm-comment) {
  color: hsl(280, 70%, 40%);
}

.textarea-code :global(.cm-s-zpakrantiain .cm-string) {
  color: hsl(280, 70%, 40%);
}

.textarea-code :global(.cm-s-zpakrantiain .cm-number) {
  color: hsl(320, 70%, 40%);
}

.textarea-code :global(.cm-s-zpakrantiain .cm-variable-1) {
  color: hsl(120, 70%, 40%);
}

.textarea-code :global(.cm-s-zpakrantiain .cm-variable-2) {
  color: hsl(180, 70%, 40%);
}

.textarea-code :global(.cm-s-zpakrantiain .cm-variable-3) {
  color: hsl(0, 70%, 40%);
}

.textarea-code :global(.cm-s-zpakrantiain .cm-operator) {
  color: hsl(30, 70%, 40%);
}

.textarea-code :global(.cm-s-zpakrantiain .cm-comment) {
  color: hsl(0, 0%, 60%);
}